[testenv:bootstrap]
deps =
    jinja2
    matrix
    tox
skip_install = true
commands = python ci/bootstrap.py --no-env
passenv =
    *
; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    docs,
    ;{py35,py36,py37,py38,pypy,pypy3}-{cover,nocov},
    {py35,py36,py37,py38,pypy,pypy3}-{cover},
    report
ignore_basepython_conflict = true
; use whatcha got
ignore_missing_interpreters = true

[testenv]
wheel = true
basepython =
    pypy: {env:TOXPYTHON:pypy}
    pypy3: {env:TOXPYTHON:pypy3}
    py35: {env:TOXPYTHON:python3.5}
    {py36,docs}: {env:TOXPYTHON:python3.6}
    py37: {env:TOXPYTHON:python3.7}
    py38: {env:TOXPYTHON:python3.8}
    {bootstrap,clean,check,report,codecov,coveralls,extension-coveralls}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop =
    cover: true
    nocov: false
deps =
    pytest
    pytest-travis-fold
    cover: pytest-cov
    numpy
    cffi
    pycuda
    matplotlib
    seaborn
    tqdm
commands =
    cover: python setup.py clean --all build_ext --force --inplace
    nocov: {posargs:pytest -vv --ignore=src}
    cover: {posargs:pytest --cov --cov-report=term-missing -vv}

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    isort
    twine
skip_install = true
commands =
    flake8
    isort --verbose --check-only --diff --recursive
    check-manifest {toxinidir}      
    python setup.py sdist
    twine check dist/*.*

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls {env:COVERALLS_EXTRAS:--merge=extension-coveralls.json} []

[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage
